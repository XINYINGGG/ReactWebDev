{"version":3,"sources":["Login.jsx","Logout.jsx","NotesList.jsx","Note.jsx","App.jsx","services.js","serviceWorker.js","index.js"],"names":["Login","_ref","updateUserName","username","addNewUser","react_default","a","createElement","className","src","alt","onChange","e","target","value","placeholder","onClick","Logout","deleteUser","NotesList","notes","deleteNote","moveNote","map","note","index","key","time","formatNote","indexOf","Note","notesList","updateNote","addNote","clearNote","sNote","updateSearch","searchNote","Object","defineProperty","src_NotesList","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","users","bind","assertThisInitialized","_this2","fetch","method","headers","Headers","content-type","body","JSON","stringify","catch","err","Promise","reject","error","then","response","ok","json","statusText","list","setState","_this3","user","addNewNote","_ref2","_this4","deleteThisNote","_ref3","_this5","moveThisNote","_ref4","_this6","clearNotes","_ref5","_this7","searchThisNote","_ref6","id","src_Logout","src_Note","src_Login","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e299be25.chunk.js","sourcesContent":["import React from 'react';\n\nconst Login = ({updateUserName, username, addNewUser}) => {\n\treturn (\n\t\t<div>\n\t\t<img className=\"photo\" src=\"todolist.png\" alt=\"\"/>\n\t\t<div className=\"login\">\n\t\t\t<input onChange={e => updateUserName(e.target.value)} value={username} className=\"username\" placeholder=\"Enter Username\"/>\n\t\t\t<button onClick={ () =>addNewUser(username) }>Login</button>\n\t\t</div>\n\t\t</div>\n\t);\n};\nexport default Login;","import React from 'react';\n\nconst Logout = ({ deleteUser }) => {\n\treturn (\n\t\t<div className=\"logout\">\n\t\t\t<button onClick={ () => deleteUser()}>Logout</button>\n\t\t</div>\n\t);\n};\n\nexport default Logout;","import React from 'react';\n\nconst formatNote = function(note, index,deleteNote,moveNote){\n  return(\n      <div key={index}>\n        <div className=\"note\">\n          <p className=\"note-title\">To Do:</p>\n          <p className=\"note-text\">{note.note}</p>\n          <div className=\"note-time\">\n            <span className=\"timestamp\">Added Time: {note.time}</span>\n          </div>\n          <button className=\"priorityButton\" onClick={ () => moveNote(note) }> The First Priority</button>\n          <button className=\"finishButton\" onClick={ () => deleteNote(note) }>Finished</button>\n        </div>\n      </div>\n  );\n};\n\nconst NotesList = ({ notes,deleteNote,moveNote }) => {\n  return(\n    <ol className=\"messages\">\n      { notes.map( note => { return formatNote(note, notes.indexOf(note),deleteNote,moveNote)})}\n    </ol>\n  )\n};\n\nexport default NotesList;","import React from 'react';\nimport NotesList from './NotesList';\n\nconst Note = ({ notesList, note, updateNote, addNote,deleteNote,moveNote,clearNote,sNote,updateSearch,searchNote }) => {\n  return (\n    <div className=\"chat-app\">\n      <div className=\"display-panel\">\n        <input className=\"searchInput\" onChange={e => updateSearch(e.target.value)} value={sNote} placeholder=\"Search The Task or Date...\" className=\"to-send\"/>\n        <button className=\"searchButton\" onClick={ () => searchNote(sNote) }>Search</button>\n        <NotesList notes={notesList} deleteNote={deleteNote} \n                   moveNote={moveNote} clearNote={clearNote}/>\n      </div>\n      <div className=\"outgoing\">\n        <input onChange={e => updateNote(e.target.value)} value={note} placeholder=\"Enter New Task...\" className=\"to-send\"/>\n        <button onClick={ () => addNote(note) }>Send</button>\n        <button className=\"importantButton\" onClick={ () => clearNote() }> ClearAll</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Note;","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Note from './Note';\nimport { addNewUser, addNewNote,deleteThisNote,moveThisNote,clearNotes,searchThisNote } from './services'; \n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      isLogin: false,\n      username:'',\n      note:'',\n      users:{},\n      notes:[],\n      sNote: '',\n    };\n  \n    this.updateUserName = this.updateUserName.bind(this);\n    this.updateNote = this.updateNote.bind(this);\n\n    this.addNote = this.addNote.bind(this);\n    this.addNewUser = this.addNewUser.bind(this);\n    this.deleteUser = this.deleteUser.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.moveNote = this.moveNote.bind(this);\n    this.clearNote = this.clearNote.bind(this);\n    this.updateSearch = this.updateSearch.bind(this);\n    this.searchNote = this.searchNote.bind(this);\n  }\n\n  addNewUser(username){\n    if(!username){ \n      return;\n    }\n    addNewUser(username)\n    .then( ({ list }) => {\n      this.setState({\n        isLogin: true,\n        notes: list,\n      });\n    })\n  }\n\n  addNote(note){\n    if(!note){\n      return;\n    }\n    const user = this.state.username;\n    addNewNote(note, user)\n    .then( ({list}) => {\n      this.setState({\n        notes: list,\n        note: '',\n      });\n    })\n  }\n\n  deleteNote(note){\n    if(!note){\n      return;\n    }\n    const user = this.state.username;\n    deleteThisNote(note, user)\n    .then( ({list}) => {\n      this.setState({\n        notes: list,\n        note:'',\n      });\n    })\n  }\n\n  moveNote(note){\n    if(!note){\n      return;\n    }\n    const user = this.state.username;\n    moveThisNote(note, user)\n    .then( ({list}) => {\n      this.setState({\n        notes: list,\n        note:'',\n      });\n    })\n  }\n\n  clearNote(){\n    const user = this.state.username;\n    clearNotes(user)\n    .then( ({list}) => {\n      this.setState({\n        notes: list,\n        note:'',\n      });\n    })\n  }\n\n  deleteUser(){\n    this.setState({\n      isLogin: false\n    });\n  }\n\n  updateUserName(username){\n    this.setState({\n      username:username\n    });\n  }\n\n  updateNote(note){\n    this.setState({\n      note:note\n    });\n  }\n  updateSearch(sNote){\n    this.setState({\n      sNote:sNote\n    });\n  }\n  searchNote(sNote){\n    const user = this.state.username;\n    searchThisNote(sNote, user)\n    .then( ({list}) => {\n      this.setState({\n        notes: list,\n        note:'',\n        sNote:'',\n      });\n    })\n  }\n  render(){\n    if(!this.state.isLogin){\n      return(\n        <div id=\"note-app\">\n          <Login updateUserName={this.updateUserName} username={this.state.username} addNewUser={this.addNewUser}/>\n        </div>\n      );\n    }else{\n      return(\n        <div id=\"note-app\">\n          <Logout deleteUser={this.deleteUser}/>\n          <Note notesList={this.state.notes} note={this.state.note} \n                updateNote={this.updateNote} addNote={this.addNote} \n                deleteNote={this.deleteNote} moveNote={this.moveNote}\n                clearNote={this.clearNote} sNote={this.state.sNote}\n                updateSearch={this.updateSearch} searchNote={this.searchNote}/>\n        </div>\n      );\n    }\n  }\n}\nexport default App;","export const addNewUser = (username) => {\n  return fetch('/addUser', {\n    method:'POST',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: JSON.stringify( { username } )\n  })\n  .catch( err => Promise.reject({ error: 'service-error', err }) )\n  .then( response => {\n    if(response.ok){\n        return response.json();\n    }\n    return Promise.reject({ error: 'service-complaint', err: response.statusText });\n  });\n};\n\nexport const addNewNote = (note, user) => {\n  return fetch('/addNote',{\n    method:'POST',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: JSON.stringify( { note, user } )\n  })\n  .catch( err => Promise.reject({ error: 'service-error', err }))\n  .then( response => {\n    if(response.ok){\n      return response.json();\n    }\n    return Promise.reject({ error: 'service-complaint', err: response.statusText });\n  });\n};\n\nexport const deleteThisNote = (note,user) => {\n  return fetch('/deleteNote', {\n    method:'POST',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: JSON.stringify( {note ,user})\n  })\n  .catch( err => Promise.reject({ error: 'service-error', err }) )\n  .then( response => {\n    if(response.ok){\n        return response.json();\n    }\n    return Promise.reject({ error: 'service-complaint', err: response.statusText });\n  });\n};\n\nexport const moveThisNote = (note,user) => {\n  return fetch('/moveNote', {\n    method:'POST',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: JSON.stringify( {note ,user})\n  })\n  .catch( err => Promise.reject({ error: 'service-error', err }) )\n  .then( response => {\n    if(response.ok){\n        return response.json();\n    }\n    return Promise.reject({ error: 'service-complaint', err: response.statusText });\n  });\n};\n\nexport const clearNotes = (user) => {\n  return fetch('/clearNote', {\n    method:'POST',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: JSON.stringify( {user})\n  })\n  .catch( err => Promise.reject({ error: 'service-error', err }) )\n  .then( response => {\n    if(response.ok){\n        return response.json();\n    }\n    return Promise.reject({ error: 'service-complaint', err: response.statusText });\n  });\n};\nexport const searchThisNote = (sNote,user) => {\n  return fetch('/searchNote', {\n    method:'POST',\n    headers: new Headers({ 'content-type': 'application/json' }),\n    body: JSON.stringify( {sNote, user})\n  })\n  .catch( err => Promise.reject({ error: 'service-error', err }) )\n  .then( response => {\n    if(response.ok){\n        return response.json();\n    }\n    return Promise.reject({ error: 'service-complaint', err: response.statusText });\n  });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}